#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
#ifndef NSCSUPABASE_SWIFT_H
#define NSCSUPABASE_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="NSCSupabase",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

@class NSCSupabaseAuthAdmin;
enum NSCSupabaseAuthChangeEvent : int8_t;
@class NSCSupabaseAuthSession;
@class NSCSupabaseListener;
@class NSString;
@class NSCSupabaseAuthUser;
enum NSCSupabaseSignOutScope : int8_t;
@class NSCSupabaseOpenIDConnectCredentials;
enum NSCSupabaseMessagingChannel : int8_t;
enum NSCSupabaseProvider : int8_t;
@class NSCSupabaseQueryParamEntry;
@class ASWebAuthenticationSession;
@class NSURL;
@class NSCSupabaseLaunchFlowResult;
enum NSCSupabaseEmailOTPType : int8_t;
enum NSCSupabaseMobileOTPType : int8_t;
@class NSCSupabaseUserIdentity;
enum NSCSupabaseResendMobileType : int8_t;
enum NSCSupabaseResendEmailType : int8_t;
@class NSCSupabaseUserAttributes;

SWIFT_CLASS_NAMED("NSCSupabaseAuth")
@interface NSCSupabaseAuth : NSObject
@property (nonatomic, strong) NSCSupabaseAuthAdmin * _Nonnull admin;
- (NSCSupabaseListener * _Nonnull)addOnAuthStateChange:(void (^ _Nonnull)(enum NSCSupabaseAuthChangeEvent, NSCSupabaseAuthSession * _Nullable))listener SWIFT_WARN_UNUSED_RESULT;
- (void)signIn:(NSString * _Nonnull)email :(NSString * _Nonnull)password :(NSString * _Nullable)captchaToken :(void (^ _Nonnull)(NSCSupabaseAuthSession * _Nullable, NSError * _Nullable))callback;
- (void)signInPhone:(NSString * _Nonnull)phone :(NSString * _Nonnull)password :(NSString * _Nullable)captchaToken :(void (^ _Nonnull)(NSCSupabaseAuthSession * _Nullable, NSError * _Nullable))callback;
- (void)signInAnonymously:(NSDictionary<NSString *, NSObject *> * _Nullable)data :(NSString * _Nullable)captchaToken :(void (^ _Nonnull)(NSCSupabaseAuthSession * _Nullable, NSError * _Nullable))callback;
- (void)signUp:(NSString * _Nonnull)email :(NSString * _Nonnull)password :(NSString * _Nullable)captchaToken :(NSDictionary<NSString *, NSObject *> * _Nullable)data :(NSString * _Nullable)redirectTo :(void (^ _Nonnull)(NSCSupabaseAuthUser * _Nullable, NSCSupabaseAuthSession * _Nullable, NSError * _Nullable))callback;
- (void)signUpWithPhone:(NSString * _Nonnull)phone :(NSString * _Nonnull)password :(NSString * _Nullable)captchaToken :(NSDictionary<NSString *, NSObject *> * _Nullable)data :(void (^ _Nonnull)(NSCSupabaseAuthUser * _Nullable, NSCSupabaseAuthSession * _Nullable, NSError * _Nullable))callback;
- (void)signOut:(void (^ _Nonnull)(NSError * _Nullable))callback;
- (void)signOutWithScope:(enum NSCSupabaseSignOutScope)scope :(void (^ _Nonnull)(NSError * _Nullable))callback;
- (void)getSession:(void (^ _Nonnull)(NSCSupabaseAuthSession * _Nullable, NSError * _Nullable))callback;
@property (nonatomic, readonly, strong) NSCSupabaseAuthSession * _Nullable currentSession;
- (void)refreshSession:(NSString * _Nullable)refreshToken :(void (^ _Nonnull)(NSCSupabaseAuthSession * _Nullable, NSError * _Nullable))callback;
- (void)user:(NSString * _Nullable)jwt :(void (^ _Nonnull)(NSCSupabaseAuthUser * _Nullable, NSError * _Nullable))callback;
@property (nonatomic, readonly, strong) NSCSupabaseAuthUser * _Nullable currentUser;
- (void)signInWithIdToken:(NSCSupabaseOpenIDConnectCredentials * _Nonnull)credentials :(void (^ _Nonnull)(NSCSupabaseAuthSession * _Nullable, NSError * _Nullable))callback;
- (void)signInWithOTP:(NSString * _Nonnull)email :(NSString * _Nullable)redirectTo :(NSDictionary<NSString *, NSObject *> * _Nullable)data :(NSString * _Nullable)captchaToken :(void (^ _Nonnull)(NSError * _Nullable))callback;
- (void)signInWithOTP:(NSString * _Nonnull)email :(NSString * _Nullable)redirectTo shouldCreateUser:(BOOL)shouldCreateUser :(NSDictionary<NSString *, NSObject *> * _Nullable)data :(NSString * _Nullable)captchaToken :(void (^ _Nonnull)(NSError * _Nullable))callback;
- (void)signInWithOTPWithPhone:(NSString * _Nonnull)phone :(NSDictionary<NSString *, NSObject *> * _Nullable)data :(NSString * _Nullable)captchaToken :(void (^ _Nonnull)(NSError * _Nullable))callback;
- (void)signInWithOTPWithPhone:(NSString * _Nonnull)phone :(enum NSCSupabaseMessagingChannel)channel shouldCreateUser:(BOOL)shouldCreateUser :(NSDictionary<NSString *, NSObject *> * _Nullable)data :(NSString * _Nullable)captchaToken :(void (^ _Nonnull)(NSError * _Nullable))callback;
- (void)signInWithOAuth:(enum NSCSupabaseProvider)provider :(NSString * _Nullable)redirectTo :(NSString * _Nullable)scopes :(NSArray<NSCSupabaseQueryParamEntry *> * _Nullable)queryParams :(void (^ _Nullable)(ASWebAuthenticationSession * _Nonnull))configure :(void (^ _Nonnull)(NSCSupabaseAuthSession * _Nullable, NSError * _Nullable))callback;
- (void)signInWithOAuth:(enum NSCSupabaseProvider)provider :(NSString * _Nullable)redirectTo :(NSString * _Nullable)scopes :(NSArray<NSCSupabaseQueryParamEntry *> * _Nullable)queryParams launchFlow:(NSCSupabaseLaunchFlowResult * _Nonnull (^ _Nonnull)(NSURL * _Nonnull))launchFlow :(void (^ _Nonnull)(NSCSupabaseAuthSession * _Nullable, NSError * _Nullable))callback;
- (NSURL * _Nullable)getOAuthSignInURL:(enum NSCSupabaseProvider)provider :(NSString * _Nullable)scopes :(NSString * _Nullable)redirectTo :(NSArray<NSCSupabaseQueryParamEntry *> * _Nullable)queryParams error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (void)signInWithSSOWithDomain:(NSString * _Nonnull)domain :(NSString * _Nullable)redirectTo :(NSString * _Nullable)captchaToken :(void (^ _Nonnull)(NSURL * _Nullable, NSError * _Nullable))callback;
- (void)signInWithSSOWithProviderId:(NSString * _Nonnull)providerId :(NSString * _Nullable)redirectTo :(NSString * _Nullable)captchaToken :(void (^ _Nonnull)(NSURL * _Nullable, NSError * _Nullable))callback;
- (void)verifyOTPWithTokenHash:(NSString * _Nonnull)tokenHash :(enum NSCSupabaseEmailOTPType)type :(void (^ _Nonnull)(NSCSupabaseAuthUser * _Nullable, NSCSupabaseAuthSession * _Nullable, NSError * _Nullable))callback;
- (void)verifyOTPWithPhone:(NSString * _Nonnull)phone :(NSString * _Nonnull)token :(enum NSCSupabaseMobileOTPType)type :(NSString * _Nullable)captchaToken :(void (^ _Nonnull)(NSCSupabaseAuthUser * _Nullable, NSCSupabaseAuthSession * _Nullable, NSError * _Nullable))callback;
- (void)verifyOTPWithEmail:(NSString * _Nonnull)email :(NSString * _Nonnull)token :(enum NSCSupabaseEmailOTPType)type :(NSString * _Nullable)redirectTo :(NSString * _Nullable)captchaToken :(void (^ _Nonnull)(NSCSupabaseAuthUser * _Nullable, NSCSupabaseAuthSession * _Nullable, NSError * _Nullable))callback;
- (void)userIdentities:(void (^ _Nonnull)(NSArray<NSCSupabaseUserIdentity *> * _Nullable, NSError * _Nullable))callback;
- (void)linkIdentity:(enum NSCSupabaseProvider)provider :(NSString * _Nullable)scopes :(NSString * _Nullable)redirectTo :(NSArray<NSCSupabaseQueryParamEntry *> * _Nullable)queryParams :(void (^ _Nonnull)(NSError * _Nullable))callback;
- (void)linkIdentity:(enum NSCSupabaseProvider)provider :(NSString * _Nullable)scopes :(NSString * _Nullable)redirectTo :(NSArray<NSCSupabaseQueryParamEntry *> * _Nullable)queryParams launchURL:(void (^ _Nonnull)(NSURL * _Nonnull))launchURL :(void (^ _Nonnull)(NSError * _Nullable))callback;
- (void)unlinkIdentity:(NSCSupabaseUserIdentity * _Nonnull)identity :(void (^ _Nonnull)(NSError * _Nullable))callback;
- (void)reauthenticate:(void (^ _Nonnull)(NSError * _Nullable))callback;
- (void)resendWithPhone:(NSString * _Nonnull)phone :(enum NSCSupabaseResendMobileType)type :(NSString * _Nullable)captchaToken :(void (^ _Nonnull)(NSString * _Nullable, NSError * _Nullable))callback;
- (void)resendWithEmail:(NSString * _Nonnull)email :(enum NSCSupabaseResendEmailType)type :(NSString * _Nullable)emailRedirectTo :(NSString * _Nullable)captchaToken :(void (^ _Nonnull)(NSError * _Nullable))callback;
- (void)resetPasswordForEmail:(NSString * _Nonnull)email :(NSString * _Nullable)redirectTo :(NSString * _Nullable)captchaToken :(void (^ _Nonnull)(NSError * _Nullable))callback;
- (void)setSession:(NSString * _Nonnull)accessToken :(NSString * _Nonnull)refreshToken :(void (^ _Nonnull)(NSCSupabaseAuthSession * _Nullable, NSError * _Nullable))callback;
- (void)exchangeCodeForSession:(NSString * _Nonnull)authCode :(void (^ _Nonnull)(NSCSupabaseAuthSession * _Nullable, NSError * _Nullable))callback;
- (void)update:(NSCSupabaseUserAttributes * _Nonnull)user :(void (^ _Nonnull)(NSCSupabaseAuthUser * _Nullable, NSError * _Nullable))callback;
- (void)startAutoRefresh;
- (void)stopAutoRefresh;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("NSCSupabaseAuthAdmin")
@interface NSCSupabaseAuthAdmin : NSObject
- (void)deleteUser:(NSString * _Nonnull)id :(void (^ _Nonnull)(NSError * _Nullable))callback;
- (void)deleteUser:(NSString * _Nonnull)id :(BOOL)shouldSoftDelete :(void (^ _Nonnull)(NSError * _Nullable))callback;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(int8_t, NSCSupabaseAuthChangeEvent, "NSCSupabaseAuthChangeEvent", open) {
  NSCSupabaseAuthChangeEventInitialSession = 0,
  NSCSupabaseAuthChangeEventPasswordRecovery = 1,
  NSCSupabaseAuthChangeEventSignedIn = 2,
  NSCSupabaseAuthChangeEventSignedOut = 3,
  NSCSupabaseAuthChangeEventTokenRefreshed = 4,
  NSCSupabaseAuthChangeEventUserUpdated = 5,
  NSCSupabaseAuthChangeEventUserDeleted = 6,
  NSCSupabaseAuthChangeEventMfaChallengeVerified = 7,
};


SWIFT_CLASS_NAMED("NSCSupabaseAuthMetaSecurity")
@interface NSCSupabaseAuthMetaSecurity : NSObject
@property (nonatomic, copy) NSString * _Nonnull captchaToken;
- (nonnull instancetype)initWithCaptchaToken:(NSString * _Nonnull)captchaToken OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("NSCSupabaseAuthSession")
@interface NSCSupabaseAuthSession : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable providerToken;
@property (nonatomic, readonly, copy) NSString * _Nullable providerRefreshToken;
@property (nonatomic, readonly, copy) NSString * _Nonnull accessToken;
@property (nonatomic, readonly, copy) NSString * _Nonnull tokenType;
@property (nonatomic, readonly) NSTimeInterval expiresIn;
@property (nonatomic, readonly) NSTimeInterval expiresAt;
@property (nonatomic, readonly, copy) NSString * _Nonnull refreshToken;
@property (nonatomic, readonly) BOOL isExpired;
@property (nonatomic, strong) NSCSupabaseAuthUser * _Nonnull user;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSUUID;
@class NSDate;
@class NSCSupabaseFactor;

SWIFT_CLASS_NAMED("NSCSupabaseAuthUser")
@interface NSCSupabaseAuthUser : NSObject
@property (nonatomic, readonly, copy) NSUUID * _Nonnull id;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSObject *> * _Nonnull appMetadata;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSObject *> * _Nonnull userMetadata;
@property (nonatomic, readonly, copy) NSString * _Nonnull aud;
@property (nonatomic, readonly, copy) NSDate * _Nullable confirmationSentAt;
@property (nonatomic, readonly, copy) NSDate * _Nullable recoverySentAt;
@property (nonatomic, readonly, copy) NSDate * _Nullable emailChangeSentAt;
@property (nonatomic, readonly, copy) NSString * _Nullable newEmail;
@property (nonatomic, readonly, copy) NSDate * _Nullable invitedAt;
@property (nonatomic, readonly, copy) NSString * _Nullable actionLink;
@property (nonatomic, readonly, copy) NSString * _Nullable email;
@property (nonatomic, readonly, copy) NSString * _Nullable phone;
@property (nonatomic, readonly, copy) NSDate * _Nonnull createdAt;
@property (nonatomic, readonly, copy) NSDate * _Nullable confirmedAt;
@property (nonatomic, readonly, copy) NSDate * _Nullable emailConfirmedAt;
@property (nonatomic, readonly, copy) NSDate * _Nullable phoneConfirmedAt;
@property (nonatomic, readonly, copy) NSDate * _Nullable lastSignInAt;
@property (nonatomic, readonly, copy) NSString * _Nullable role;
@property (nonatomic, readonly, copy) NSDate * _Nonnull updatedAt;
@property (nonatomic, readonly, copy) NSArray<NSCSupabaseUserIdentity *> * _Nullable identities;
@property (nonatomic, readonly) BOOL isAnonymous;
@property (nonatomic, readonly, copy) NSArray<NSCSupabaseFactor *> * _Nullable factors;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum NSCSupabaseRealtimeChannelStatus : int8_t;

SWIFT_CLASS_NAMED("NSCSupabaseChannel")
@interface NSCSupabaseChannel : NSObject
@property (nonatomic, readonly) enum NSCSupabaseRealtimeChannelStatus status;
- (void)broadcast:(NSString * _Nonnull)event :(NSDictionary<NSString *, NSObject *> * _Nonnull)message :(void (^ _Nonnull)(NSError * _Nullable))callback;
- (void)onBroadcast:(NSString * _Nonnull)event :(void (^ _Nonnull)(NSDictionary<NSString *, NSObject *> * _Nonnull))callback;
- (void)onPresenceChange:(NSString * _Nonnull)event :(void (^ _Nonnull)(NSDictionary<NSString *, NSObject *> * _Nonnull))callback;
- (void)onPostgresChange:(NSString * _Nonnull)event :(NSString * _Nonnull)scheme :(NSString * _Nullable)table :(NSString * _Nullable)filter :(void (^ _Nonnull)(NSDictionary<NSString *, NSObject *> * _Nonnull))callback;
- (void)subscribe:(void (^ _Nonnull)(void))callback;
- (void)unsubscribe:(void (^ _Nonnull)(void))callback;
- (void)untrack:(void (^ _Nonnull)(void))callback;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSCSupabasePostgres;
@class NSCSupabasePostgresQueryBuilder;
@class NSCSupabseStorage;
@class NSCSupabaseFunctions;
@class NSCSupabasePostgresFilterBuilder;
enum NSCSupabasePostgresCountOption : int8_t;
@class NSCSupabaseJSONValue;

SWIFT_CLASS_NAMED("NSCSupabaseClient")
@interface NSCSupabaseClient : NSObject
+ (NSCSupabaseClient * _Nullable)createClient:(NSString * _Nonnull)supabaseURL :(NSString * _Nonnull)supabaseKey error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (NSCSupabasePostgres * _Nonnull)schema:(NSString * _Nonnull)schema SWIFT_WARN_UNUSED_RESULT;
- (NSCSupabasePostgresQueryBuilder * _Nonnull)from:(NSString * _Nonnull)table SWIFT_WARN_UNUSED_RESULT;
- (void)handleURL:(NSURL * _Nonnull)url;
@property (nonatomic, strong) NSCSupabaseAuth * _Nonnull auth;
@property (nonatomic, strong) NSCSupabseStorage * _Nonnull storage;
- (NSCSupabaseChannel * _Nonnull)channel:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
- (void)removeChannel:(NSCSupabaseChannel * _Nonnull)channel :(void (^ _Nonnull)(void))callback;
- (void)removeAllChannels:(void (^ _Nonnull)(void))callback;
@property (nonatomic, strong) NSCSupabaseFunctions * _Nonnull functions;
- (NSCSupabasePostgresFilterBuilder * _Nullable)rpc:(NSString * _Nonnull)fn error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (NSCSupabasePostgresFilterBuilder * _Nullable)rpc:(NSString * _Nonnull)fn count:(enum NSCSupabasePostgresCountOption)count error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (NSCSupabasePostgresFilterBuilder * _Nullable)rpc:(NSString * _Nonnull)fn params:(NSCSupabaseJSONValue * _Nonnull)params count:(enum NSCSupabasePostgresCountOption)count error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(int8_t, NSCSupabaseEmailOTPType, "NSCSupabaseEmailOTPType", open) {
  NSCSupabaseEmailOTPTypeSignup = 0,
  NSCSupabaseEmailOTPTypeInvite = 1,
  NSCSupabaseEmailOTPTypeMagiclink = 2,
  NSCSupabaseEmailOTPTypeRecovery = 3,
  NSCSupabaseEmailOTPTypeEmailChange = 4,
  NSCSupabaseEmailOTPTypeEmail = 5,
};

enum NSCSupabaseFactorStatus : int8_t;

SWIFT_CLASS_NAMED("NSCSupabaseFactor")
@interface NSCSupabaseFactor : NSObject
@property (nonatomic, copy) NSString * _Nonnull id;
@property (nonatomic, copy) NSString * _Nullable friendlyName;
@property (nonatomic, copy) NSString * _Nonnull factorType;
@property (nonatomic) enum NSCSupabaseFactorStatus status;
@property (nonatomic, copy) NSDate * _Nonnull createdAt;
@property (nonatomic, copy) NSDate * _Nonnull updatedAt;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(int8_t, NSCSupabaseFactorStatus, "NSCSupabaseFactorStatus", open) {
  NSCSupabaseFactorStatusVerified = 0,
  NSCSupabaseFactorStatusUnverified = 1,
};

@class NSData;

SWIFT_CLASS_NAMED("NSCSupabaseFunctionInvokeOptions")
@interface NSCSupabaseFunctionInvokeOptions : NSObject
@property (nonatomic, copy) NSString * _Nullable method;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nullable headers;
- (nonnull instancetype)initWithFileBody:(NSData * _Nonnull)fileBody OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithJson:(NSDictionary<NSString *, NSObject *> * _Nullable)json OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSCSupabaseFunctionsResult;
@class NSCSupabaseFunctionsErrorResult;

SWIFT_CLASS_NAMED("NSCSupabaseFunctions")
@interface NSCSupabaseFunctions : NSObject
- (void)invoke:(NSString * _Nonnull)functionName :(NSCSupabaseFunctionInvokeOptions * _Nullable)options :(void (^ _Nonnull)(NSCSupabaseFunctionsResult * _Nullable, NSCSupabaseFunctionsErrorResult * _Nullable))callback;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSNumber;

SWIFT_CLASS_NAMED("NSCSupabaseFunctionsErrorResult")
@interface NSCSupabaseFunctionsErrorResult : NSObject
@property (nonatomic, readonly) BOOL isHttpError;
@property (nonatomic, readonly, copy) NSData * _Nullable httpError;
- (void)json:(void (^ _Nonnull)(NSDictionary<NSString *, NSObject *> * _Nullable, NSError * _Nullable))callback;
@property (nonatomic, readonly, strong) NSNumber * _Nullable httpErrorCode;
@property (nonatomic, readonly, copy) NSString * _Nullable message;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSHTTPURLResponse;

SWIFT_CLASS_NAMED("NSCSupabaseFunctionsResult")
@interface NSCSupabaseFunctionsResult : NSObject
@property (nonatomic, readonly, copy) NSData * _Nullable data;
@property (nonatomic, readonly, strong) NSHTTPURLResponse * _Nullable response;
- (void)json:(void (^ _Nonnull)(NSDictionary<NSString *, NSObject *> * _Nullable, NSError * _Nullable))callback;
- (void)text:(void (^ _Nonnull)(NSString * _Nullable))callback;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("NSCSupabaseJSONValue")
@interface NSCSupabaseJSONValue : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull queryValue;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithBoolean:(BOOL)boolean OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithInteger:(NSInteger)integer OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithDouble:(double)double_ OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithString:(NSString * _Nonnull)string OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithDate:(NSDate * _Nonnull)date OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithData:(NSData * _Nonnull)data OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithArray:(NSArray<NSCSupabaseJSONValue *> * _Nonnull)array OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithObject:(NSDictionary<NSString *, NSCSupabaseJSONValue *> * _Nonnull)object OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly) id _Nullable json;
@property (nonatomic, readonly) id _Nullable value;
@end


SWIFT_CLASS_NAMED("NSCSupabaseLaunchFlowResult")
@interface NSCSupabaseLaunchFlowResult : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(int8_t, NSCSupabaseLaunchFlowResultType, "NSCSupabaseLaunchFlowResultType", open) {
  NSCSupabaseLaunchFlowResultTypeSuccess = 0,
  NSCSupabaseLaunchFlowResultTypeError = 1,
};


SWIFT_CLASS_NAMED("NSCSupabaseListener")
@interface NSCSupabaseListener : NSObject
- (void)remove;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(int8_t, NSCSupabaseMessagingChannel, "NSCSupabaseMessagingChannel", open) {
  NSCSupabaseMessagingChannelSms = 0,
  NSCSupabaseMessagingChannelWhatsapp = 1,
};

typedef SWIFT_ENUM_NAMED(int8_t, NSCSupabaseMobileOTPType, "NSCSupabaseMobileOTPType", open) {
  NSCSupabaseMobileOTPTypeSms = 0,
  NSCSupabaseMobileOTPTypePhoneChange = 1,
};

enum NSCSupabaseOpenIDConnectCredentialsProvider : int8_t;

SWIFT_CLASS_NAMED("NSCSupabaseOpenIDConnectCredentials")
@interface NSCSupabaseOpenIDConnectCredentials : NSObject
@property (nonatomic) enum NSCSupabaseOpenIDConnectCredentialsProvider provider;
@property (nonatomic, copy) NSString * _Nonnull idToken;
@property (nonatomic, copy) NSString * _Nullable accessToken;
@property (nonatomic, copy) NSString * _Nullable nonce;
@property (nonatomic, strong) NSCSupabaseAuthMetaSecurity * _Nullable gotrueMetaSecurity;
- (nonnull instancetype)init:(enum NSCSupabaseOpenIDConnectCredentialsProvider)provider :(NSString * _Nonnull)idToken OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithProvider:(enum NSCSupabaseOpenIDConnectCredentialsProvider)provider idToken:(NSString * _Nonnull)idToken accessToken:(NSString * _Nullable)accessToken nonce:(NSString * _Nullable)nonce gotrueMetaSecurity:(NSCSupabaseAuthMetaSecurity * _Nullable)gotrueMetaSecurity OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(int8_t, NSCSupabaseOpenIDConnectCredentialsProvider, "NSCSupabaseOpenIDConnectCredentialsProvider", open) {
  NSCSupabaseOpenIDConnectCredentialsProviderGoogle = 0,
  NSCSupabaseOpenIDConnectCredentialsProviderApple = 1,
  NSCSupabaseOpenIDConnectCredentialsProviderAzure = 2,
  NSCSupabaseOpenIDConnectCredentialsProviderFacebook = 3,
};


SWIFT_CLASS_NAMED("NSCSupabasePostgresClient")
@interface NSCSupabasePostgres : NSObject
- (NSCSupabasePostgres * _Nonnull)schema:(NSString * _Nonnull)schema SWIFT_WARN_UNUSED_RESULT;
- (NSCSupabasePostgresQueryBuilder * _Nonnull)from:(NSString * _Nonnull)table SWIFT_WARN_UNUSED_RESULT;
- (NSCSupabasePostgresFilterBuilder * _Nullable)rpc:(NSString * _Nonnull)fn error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (NSCSupabasePostgresFilterBuilder * _Nullable)rpc:(NSString * _Nonnull)fn count:(enum NSCSupabasePostgresCountOption)count error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (NSCSupabasePostgresFilterBuilder * _Nullable)rpc:(NSString * _Nonnull)fn params:(NSCSupabaseJSONValue * _Nonnull)params count:(enum NSCSupabasePostgresCountOption)count error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (NSCSupabasePostgresFilterBuilder * _Nullable)rpc:(NSString * _Nonnull)fn params:(NSCSupabaseJSONValue * _Nonnull)params head:(BOOL)head get:(BOOL)get count:(enum NSCSupabasePostgresCountOption)count error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(int8_t, NSCSupabasePostgresCountOption, "NSCSupabasePostgresCountOption", open) {
  NSCSupabasePostgresCountOptionNone = 0,
  NSCSupabasePostgresCountOptionExact = 1,
  NSCSupabasePostgresCountOptionPlanned = 2,
  NSCSupabasePostgresCountOptionEstimated = 3,
};


SWIFT_CLASS_NAMED("NSCSupabasePostgresFetchOptions")
@interface NSCSupabasePostgresFetchOptions : NSObject
@property (nonatomic, readonly) BOOL head;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("NSCSupabasePostgresTransformBuilder")
@interface NSCSupabasePostgresTransformBuilder : NSObject
- (nonnull instancetype)select:(NSString * _Nullable)columns SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)order:(NSString * _Nonnull)column :(BOOL)ascending :(BOOL)nullsFirst :(NSString * _Nullable)referencedTable SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)range:(NSInteger)from :(NSInteger)to :(NSString * _Nullable)referencedTable SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)limit:(NSInteger)count SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)single SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)maybeSingle SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)csv SWIFT_WARN_UNUSED_RESULT;
- (void)execute:(NSCSupabasePostgresFetchOptions * _Nullable)options :(void (^ _Nonnull)(id _Nullable, NSError * _Nullable))callback;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum NSCSupabasePostgresTextSearchType : int8_t;
enum NSCSupabasePostgresFilterBuilderOperator : int8_t;

SWIFT_CLASS_NAMED("NSCSupabasePostgresFilterBuilder")
@interface NSCSupabasePostgresFilterBuilder : NSCSupabasePostgresTransformBuilder
- (NSCSupabasePostgresFilterBuilder * _Nonnull)eq:(NSString * _Nonnull)column :(NSCSupabaseJSONValue * _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
- (NSCSupabasePostgresFilterBuilder * _Nonnull)gte:(NSString * _Nonnull)column :(NSCSupabaseJSONValue * _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
- (NSCSupabasePostgresFilterBuilder * _Nonnull)lte:(NSString * _Nonnull)column :(NSCSupabaseJSONValue * _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
- (NSCSupabasePostgresFilterBuilder * _Nonnull)lt:(NSString * _Nonnull)column :(NSCSupabaseJSONValue * _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
- (NSCSupabasePostgresFilterBuilder * _Nonnull)neq:(NSString * _Nonnull)column :(NSCSupabaseJSONValue * _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
- (NSCSupabasePostgresFilterBuilder * _Nonnull)gt:(NSString * _Nonnull)column :(NSCSupabaseJSONValue * _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
- (NSCSupabasePostgresFilterBuilder * _Nonnull)like:(NSString * _Nonnull)column :(NSString * _Nonnull)pattern SWIFT_WARN_UNUSED_RESULT;
- (NSCSupabasePostgresFilterBuilder * _Nonnull)ilike:(NSString * _Nonnull)column :(NSString * _Nonnull)pattern SWIFT_WARN_UNUSED_RESULT;
- (NSCSupabasePostgresFilterBuilder * _Nonnull)is:(NSString * _Nonnull)column SWIFT_WARN_UNUSED_RESULT;
- (NSCSupabasePostgresFilterBuilder * _Nonnull)is:(NSString * _Nonnull)column value:(BOOL)value SWIFT_WARN_UNUSED_RESULT;
- (NSCSupabasePostgresFilterBuilder * _Nonnull)in:(NSString * _Nonnull)column :(NSArray<NSCSupabaseJSONValue *> * _Nonnull)pattern SWIFT_WARN_UNUSED_RESULT;
- (NSCSupabasePostgresFilterBuilder * _Nonnull)contains:(NSString * _Nonnull)column :(NSCSupabaseJSONValue * _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
- (NSCSupabasePostgresFilterBuilder * _Nonnull)containedBy:(NSString * _Nonnull)column :(NSCSupabaseJSONValue * _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
- (NSCSupabasePostgresFilterBuilder * _Nonnull)rangeGt:(NSString * _Nonnull)column :(NSCSupabaseJSONValue * _Nonnull)range SWIFT_WARN_UNUSED_RESULT;
- (NSCSupabasePostgresFilterBuilder * _Nonnull)rangeGte:(NSString * _Nonnull)column :(NSCSupabaseJSONValue * _Nonnull)range SWIFT_WARN_UNUSED_RESULT;
- (NSCSupabasePostgresFilterBuilder * _Nonnull)rangeLt:(NSString * _Nonnull)column :(NSCSupabaseJSONValue * _Nonnull)range SWIFT_WARN_UNUSED_RESULT;
- (NSCSupabasePostgresFilterBuilder * _Nonnull)rangeLte:(NSString * _Nonnull)column :(NSCSupabaseJSONValue * _Nonnull)range SWIFT_WARN_UNUSED_RESULT;
- (NSCSupabasePostgresFilterBuilder * _Nonnull)rangeAdjacent:(NSString * _Nonnull)column :(NSCSupabaseJSONValue * _Nonnull)range SWIFT_WARN_UNUSED_RESULT;
- (NSCSupabasePostgresFilterBuilder * _Nonnull)overlaps:(NSString * _Nonnull)column :(NSCSupabaseJSONValue * _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
- (NSCSupabasePostgresFilterBuilder * _Nonnull)textSearch:(NSString * _Nonnull)column :(NSCSupabaseJSONValue * _Nonnull)value :(NSString * _Nullable)config SWIFT_WARN_UNUSED_RESULT;
- (NSCSupabasePostgresFilterBuilder * _Nonnull)textSearch:(NSString * _Nonnull)column :(NSCSupabaseJSONValue * _Nonnull)value :(NSString * _Nullable)config type:(enum NSCSupabasePostgresTextSearchType)type SWIFT_WARN_UNUSED_RESULT;
- (NSCSupabasePostgresFilterBuilder * _Nonnull)match:(NSDictionary<NSString *, NSCSupabaseJSONValue *> * _Nonnull)query SWIFT_WARN_UNUSED_RESULT;
- (NSCSupabasePostgresFilterBuilder * _Nonnull)notWithColumn:(NSString * _Nonnull)column :(enum NSCSupabasePostgresFilterBuilderOperator)operatorFilter :(NSCSupabaseJSONValue * _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
- (NSCSupabasePostgresFilterBuilder * _Nonnull)orWithFilters:(NSString * _Nonnull)filters :(NSString * _Nullable)referencedTable SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM_NAMED(int8_t, NSCSupabasePostgresFilterBuilderOperator, "NSCSupabasePostgresFilterBuilderOperator", open) {
  NSCSupabasePostgresFilterBuilderOperatorEq = 0,
  NSCSupabasePostgresFilterBuilderOperatorNeq = 1,
  NSCSupabasePostgresFilterBuilderOperatorGt = 2,
  NSCSupabasePostgresFilterBuilderOperatorGte = 3,
  NSCSupabasePostgresFilterBuilderOperatorLt = 4,
  NSCSupabasePostgresFilterBuilderOperatorLte = 5,
  NSCSupabasePostgresFilterBuilderOperatorLike = 6,
  NSCSupabasePostgresFilterBuilderOperatorIlike = 7,
  NSCSupabasePostgresFilterBuilderOperatorIs = 8,
  NSCSupabasePostgresFilterBuilderOperatorIn = 9,
  NSCSupabasePostgresFilterBuilderOperatorCs = 10,
  NSCSupabasePostgresFilterBuilderOperatorCd = 11,
  NSCSupabasePostgresFilterBuilderOperatorSl = 12,
  NSCSupabasePostgresFilterBuilderOperatorSr = 13,
  NSCSupabasePostgresFilterBuilderOperatorNxl = 14,
  NSCSupabasePostgresFilterBuilderOperatorNxr = 15,
  NSCSupabasePostgresFilterBuilderOperatorAdj = 16,
  NSCSupabasePostgresFilterBuilderOperatorOv = 17,
  NSCSupabasePostgresFilterBuilderOperatorFts = 18,
  NSCSupabasePostgresFilterBuilderOperatorPlfts = 19,
  NSCSupabasePostgresFilterBuilderOperatorPhfts = 20,
  NSCSupabasePostgresFilterBuilderOperatorWfts = 21,
};


SWIFT_CLASS_NAMED("NSCSupabasePostgresQueryBuilder")
@interface NSCSupabasePostgresQueryBuilder : NSObject
- (NSCSupabasePostgresFilterBuilder * _Nullable)insert:(NSCSupabaseJSONValue * _Nonnull)values :(enum NSCSupabasePostgresCountOption)count error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (NSCSupabasePostgresFilterBuilder * _Nullable)update:(NSDictionary<NSString *, NSCSupabaseJSONValue *> * _Nonnull)value :(enum NSCSupabasePostgresCountOption)count error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (NSCSupabasePostgresFilterBuilder * _Nullable)upsert:(NSCSupabaseJSONValue * _Nonnull)value :(NSString * _Nullable)onConflict :(enum NSCSupabasePostgresCountOption)count :(BOOL)ignoreDuplicates error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (NSCSupabasePostgresFilterBuilder * _Nonnull)delete:(enum NSCSupabasePostgresCountOption)count SWIFT_WARN_UNUSED_RESULT;
- (NSCSupabasePostgresFilterBuilder * _Nonnull)select:(NSString * _Nullable)columns :(enum NSCSupabasePostgresCountOption)count SWIFT_WARN_UNUSED_RESULT;
- (NSCSupabasePostgresFilterBuilder * _Nonnull)select:(NSString * _Nullable)columns :(enum NSCSupabasePostgresCountOption)count head:(BOOL)head SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(int8_t, NSCSupabasePostgresTextSearchType, "NSCSupabasePostgresTextSearchType", open) {
  NSCSupabasePostgresTextSearchTypePlain = 0,
  NSCSupabasePostgresTextSearchTypePhrase = 1,
  NSCSupabasePostgresTextSearchTypeWebsearch = 2,
};


typedef SWIFT_ENUM_NAMED(int8_t, NSCSupabaseProvider, "NSCSupabaseProvider", open) {
  NSCSupabaseProviderApple = 0,
  NSCSupabaseProviderAzure = 1,
  NSCSupabaseProviderBitbucket = 2,
  NSCSupabaseProviderDiscord = 3,
  NSCSupabaseProviderEmail = 4,
  NSCSupabaseProviderFacebook = 5,
  NSCSupabaseProviderFigma = 6,
  NSCSupabaseProviderGithub = 7,
  NSCSupabaseProviderGitlab = 8,
  NSCSupabaseProviderGoogle = 9,
  NSCSupabaseProviderKakao = 10,
  NSCSupabaseProviderKeycloak = 11,
  NSCSupabaseProviderLinkedin = 12,
  NSCSupabaseProviderLinkedinOIDC = 13,
  NSCSupabaseProviderNotion = 14,
  NSCSupabaseProviderSlack = 15,
  NSCSupabaseProviderSlackOIDC = 16,
  NSCSupabaseProviderSpotify = 17,
  NSCSupabaseProviderTwitch = 18,
  NSCSupabaseProviderTwitter = 19,
  NSCSupabaseProviderWorkos = 20,
  NSCSupabaseProviderZoom = 21,
  NSCSupabaseProviderFly = 22,
};


SWIFT_CLASS_NAMED("NSCSupabaseQueryParamEntry")
@interface NSCSupabaseQueryParamEntry : NSObject
@property (nonatomic, copy) NSString * _Nonnull name;
@property (nonatomic, copy) NSString * _Nullable value;
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name value:(NSString * _Nullable)value OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(int8_t, NSCSupabaseRealtimeChannelStatus, "NSCSupabaseRealtimeChannelStatus", open) {
  NSCSupabaseRealtimeChannelStatusUnsubscribed = 0,
  NSCSupabaseRealtimeChannelStatusSubscribing = 1,
  NSCSupabaseRealtimeChannelStatusSubscribed = 2,
  NSCSupabaseRealtimeChannelStatusUnsubscribing = 3,
};

typedef SWIFT_ENUM_NAMED(int8_t, NSCSupabaseResendEmailType, "NSCSupabaseResendEmailType", open) {
  NSCSupabaseResendEmailTypeSignup = 0,
  NSCSupabaseResendEmailTypeEmailChange = 1,
};

typedef SWIFT_ENUM_NAMED(int8_t, NSCSupabaseResendMobileType, "NSCSupabaseResendMobileType", open) {
  NSCSupabaseResendMobileTypeSms = 0,
  NSCSupabaseResendMobileTypePhoneChange = 1,
};

typedef SWIFT_ENUM_NAMED(int8_t, NSCSupabaseSignOutScope, "NSCSupabaseSignOutScope", open) {
  NSCSupabaseSignOutScopeGlobal = 0,
  NSCSupabaseSignOutScopeLocal = 1,
  NSCSupabaseSignOutScopeOthers = 2,
};


SWIFT_CLASS_NAMED("NSCSupabaseUserAttributes")
@interface NSCSupabaseUserAttributes : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, copy) NSString * _Nullable phone;
@property (nonatomic, copy) NSString * _Nullable password;
@property (nonatomic, copy) NSString * _Nullable nonce;
@property (nonatomic, copy) NSString * _Nullable emailChangeToken SWIFT_DEPRECATED_MSG("This is an old field, stop relying on it.");
@property (nonatomic, copy) NSDictionary<NSString *, NSObject *> * _Nullable data;
@end


SWIFT_CLASS_NAMED("NSCSupabaseUserIdentity")
@interface NSCSupabaseUserIdentity : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSUUID * _Nonnull identityId;
@property (nonatomic, readonly, copy) NSUUID * _Nonnull userId;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSObject *> * _Nullable identityData;
@property (nonatomic, readonly, copy) NSString * _Nonnull provider;
@property (nonatomic, readonly, copy) NSDate * _Nullable createdAt;
@property (nonatomic, readonly, copy) NSDate * _Nullable lastSignInAt;
@property (nonatomic, readonly, copy) NSDate * _Nullable updatedAt;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSCSupabseStorageBucketOptions;
@class NSCSupabseStorageBucket;
@class NSCSupabseStorageFileApi;

SWIFT_CLASS_NAMED("NSCSupabseStorage")
@interface NSCSupabseStorage : NSObject
- (void)createBucket:(NSString * _Nonnull)id :(NSCSupabseStorageBucketOptions * _Nonnull)options :(void (^ _Nonnull)(NSError * _Nullable))callback;
- (void)getBucket:(NSString * _Nonnull)id :(void (^ _Nonnull)(NSCSupabseStorageBucket * _Nullable, NSError * _Nullable))callback;
- (void)listBuckets:(NSString * _Nonnull)id :(void (^ _Nonnull)(NSArray<NSCSupabseStorageBucket *> * _Nullable, NSError * _Nullable))callback;
- (void)updateBucket:(NSString * _Nonnull)id :(NSCSupabseStorageBucketOptions * _Nonnull)options :(void (^ _Nonnull)(NSError * _Nullable))callback;
- (void)deleteBucket:(NSString * _Nonnull)id :(void (^ _Nonnull)(NSError * _Nullable))callback;
- (void)emptyBucket:(NSString * _Nonnull)id :(void (^ _Nonnull)(NSError * _Nullable))callback;
- (NSCSupabseStorageFileApi * _Nonnull)from:(NSString * _Nonnull)id SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("NSCSupabseStorageBucket")
@interface NSCSupabseStorageBucket : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull owner;
@property (nonatomic, readonly) BOOL isPublic;
@property (nonatomic, readonly, copy) NSDate * _Nonnull createdAt;
@property (nonatomic, readonly, copy) NSDate * _Nonnull updatedAt;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable allowedMimeTypes;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("NSCSupabseStorageBucketOptions")
@interface NSCSupabseStorageBucketOptions : NSObject
@property (nonatomic, getter=public, setter=setPublic:) BOOL public_;
@property (nonatomic, copy) NSString * _Nullable fileSizeLimit;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable allowedMimeTypes;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init:(BOOL)public_ :(NSString * _Nullable)fileSizeLimit :(NSArray<NSString *> * _Nullable)allowedMimeTypes OBJC_DESIGNATED_INITIALIZER;
@end

@class NSCSupabseStorageFileOptions;
@class NSCSupabseStorageFileUploadResponse;
@class NSCSupabseStorageTransformOptions;
@class NSCSupabseStorageSearchOptions;
@class NSCSupabseStorageFileObject;
@class NSCSupabseStorageSignedUploadURL;
@class NSCSupabseStorageSignedURLUploadResponse;

SWIFT_CLASS_NAMED("NSCSupabseStorageFileApi")
@interface NSCSupabseStorageFileApi : NSObject
- (void)upload:(NSString * _Nonnull)path data:(NSData * _Nonnull)data :(NSCSupabseStorageFileOptions * _Nonnull)options :(void (^ _Nonnull)(NSCSupabseStorageFileUploadResponse * _Nullable, NSError * _Nullable))callback;
- (void)upload:(NSString * _Nonnull)path file:(NSURL * _Nonnull)file :(NSCSupabseStorageFileOptions * _Nonnull)options :(void (^ _Nonnull)(NSCSupabseStorageFileUploadResponse * _Nullable, NSError * _Nullable))callback;
- (void)download:(NSString * _Nonnull)path :(NSCSupabseStorageTransformOptions * _Nonnull)options :(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))callback;
- (void)list:(NSString * _Nullable)path :(NSCSupabseStorageSearchOptions * _Nullable)options :(void (^ _Nonnull)(NSArray<NSCSupabseStorageFileObject *> * _Nullable, NSError * _Nullable))callback;
- (void)update:(NSString * _Nonnull)path data:(NSData * _Nonnull)data :(NSCSupabseStorageFileOptions * _Nonnull)options :(void (^ _Nonnull)(NSCSupabseStorageFileUploadResponse * _Nullable, NSError * _Nullable))callback;
- (void)update:(NSString * _Nonnull)path file:(NSURL * _Nonnull)file :(NSCSupabseStorageFileOptions * _Nonnull)options :(void (^ _Nonnull)(NSCSupabseStorageFileUploadResponse * _Nullable, NSError * _Nullable))callback;
- (void)move:(NSString * _Nonnull)fromPath :(NSString * _Nonnull)toPath :(void (^ _Nonnull)(NSError * _Nullable))callback;
- (void)copy:(NSString * _Nonnull)fromPath :(NSString * _Nonnull)toPath :(void (^ _Nonnull)(NSString * _Nullable, NSError * _Nullable))callback;
- (void)remove:(NSArray<NSString *> * _Nonnull)paths :(void (^ _Nonnull)(NSArray<NSCSupabseStorageFileObject *> * _Nullable, NSError * _Nullable))callback;
- (void)createSignedUrl:(NSString * _Nonnull)path :(NSInteger)expiresIn :(NSString * _Nullable)download :(NSCSupabseStorageTransformOptions * _Nullable)options :(void (^ _Nonnull)(NSString * _Nullable, NSError * _Nullable))callback;
- (void)createSignedUrls:(NSArray<NSString *> * _Nonnull)paths :(NSInteger)expiresIn :(NSString * _Nullable)download :(void (^ _Nonnull)(NSArray<NSString *> * _Nullable, NSError * _Nullable))callback;
- (void)createSignedUploadUrl:(NSString * _Nonnull)path :(void (^ _Nonnull)(NSCSupabseStorageSignedUploadURL * _Nullable, NSError * _Nullable))callback;
- (void)uploadToSignedUrl:(NSString * _Nonnull)path :(NSString * _Nonnull)token data:(NSData * _Nonnull)data :(NSCSupabseStorageFileOptions * _Nullable)options :(void (^ _Nonnull)(NSCSupabseStorageSignedURLUploadResponse * _Nullable, NSError * _Nullable))callback;
- (NSString * _Nullable)getPublicUrl:(NSString * _Nonnull)path :(NSString * _Nullable)download :(NSCSupabseStorageTransformOptions * _Nullable)options error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("NSCSupabseStorageFileObject")
@interface NSCSupabseStorageFileObject : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nullable bucketId;
@property (nonatomic, readonly, copy) NSString * _Nullable owner;
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, copy) NSDate * _Nullable updatedAt;
@property (nonatomic, readonly, copy) NSDate * _Nullable createdAt;
@property (nonatomic, readonly, copy) NSDate * _Nullable lastAccessedAt;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSObject *> * _Nullable metadata;
@property (nonatomic, readonly, strong) NSCSupabseStorageBucket * _Nullable buckets;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("NSCSupabseStorageFileOptions")
@interface NSCSupabseStorageFileOptions : NSObject
@property (nonatomic, copy) NSString * _Nonnull cacheControl;
@property (nonatomic, copy) NSString * _Nullable contentType;
@property (nonatomic) BOOL upsert;
@property (nonatomic, copy) NSString * _Nullable duplex;
@property (nonatomic, copy) NSDictionary<NSString *, NSObject *> * _Nullable metadata;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nullable headers;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("NSCSupabseStorageFileUploadResponse")
@interface NSCSupabseStorageFileUploadResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nonnull path;
@property (nonatomic, readonly, copy) NSString * _Nonnull fullPath;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSCSupabseStorageSortBy;

SWIFT_CLASS_NAMED("NSCSupabseStorageSearchOptions")
@interface NSCSupabseStorageSearchOptions : NSObject
@property (nonatomic, strong) NSNumber * _Nullable limit;
@property (nonatomic, strong) NSNumber * _Nullable offset;
@property (nonatomic, strong) NSCSupabseStorageSortBy * _Nullable sortBy;
@property (nonatomic, copy) NSString * _Nullable search;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("NSCSupabseStorageSignedURLUploadResponse")
@interface NSCSupabseStorageSignedURLUploadResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull path;
@property (nonatomic, readonly, copy) NSString * _Nonnull fullPath;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("NSCSupabseStorageSignedUploadURL")
@interface NSCSupabseStorageSignedUploadURL : NSObject
@property (nonatomic, copy) NSString * _Nonnull signedURL;
@property (nonatomic, copy) NSString * _Nonnull path;
@property (nonatomic, copy) NSString * _Nonnull token;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("NSCSupabseStorageSortBy")
@interface NSCSupabseStorageSortBy : NSObject
@property (nonatomic, copy) NSString * _Nullable column;
@property (nonatomic, copy) NSString * _Nullable order;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("NSCSupabseStorageTransformOptions")
@interface NSCSupabseStorageTransformOptions : NSObject
@property (nonatomic, strong) NSNumber * _Nullable width;
@property (nonatomic, strong) NSNumber * _Nullable height;
@property (nonatomic, copy) NSString * _Nullable resize;
@property (nonatomic, strong) NSNumber * _Nullable quality;
@property (nonatomic, copy) NSString * _Nullable format;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
