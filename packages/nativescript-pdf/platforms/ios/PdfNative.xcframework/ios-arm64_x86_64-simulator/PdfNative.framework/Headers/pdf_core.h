#pragma once

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <stdarg.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdlib.h>

typedef enum CCellWidthType {
  CCellWidthType_Auto,
  CCellWidthType_Wrap,
  CCellWidthType_Fixed,
} CCellWidthType;

typedef enum CColumnKeyType {
  CColumnKeyType_Index,
  CColumnKeyType_DataKey,
} CColumnKeyType;

typedef enum CHorizontalAlign {
  CHorizontalAlign_Left,
  CHorizontalAlign_Center,
  CHorizontalAlign_Right,
} CHorizontalAlign;

typedef enum CPdfNativeColorOptionalType {
  CPdfNativeColorOptionalType_None,
  CPdfNativeColorOptionalType_Some,
} CPdfNativeColorOptionalType;

typedef enum CPdfNativePointsOptionalType {
  CPdfNativePointsOptionalType_None,
  CPdfNativePointsOptionalType_Some,
} CPdfNativePointsOptionalType;

typedef enum CVerticalAlign {
  CVerticalAlign_Top,
  CVerticalAlign_Middle,
  CVerticalAlign_Bottom,
} CVerticalAlign;

typedef enum PdfNativeFontFamily {
  PdfNativeFontFamily_Helvetica,
  PdfNativeFontFamily_Times,
  PdfNativeFontFamily_Courier,
} PdfNativeFontFamily;

typedef enum PdfNativeFontStyle {
  PdfNativeFontStyle_Normal,
  PdfNativeFontStyle_Bold,
  PdfNativeFontStyle_Italic,
  PdfNativeFontStyle_BoldItalic,
} PdfNativeFontStyle;

typedef enum PdfNativeOrientation {
  PdfNativeOrientation_Landscape,
  PdfNativeOrientation_Portrait,
} PdfNativeOrientation;

typedef enum PdfNativeOverflow {
  PdfNativeOverflow_LineBreak,
  PdfNativeOverflow_Ellipsize,
  PdfNativeOverflow_Visible,
  PdfNativeOverflow_Hidden,
} PdfNativeOverflow;

typedef enum PdfNativePageBreak {
  PdfNativePageBreak_Auto,
  PdfNativePageBreak_Avoid,
  PdfNativePageBreak_Always,
} PdfNativePageBreak;

typedef enum PdfNativeRotationDirection {
  PdfNativeRotationDirection_CW,
  PdfNativeRotationDirection_CCW,
} PdfNativeRotationDirection;

typedef enum PdfNativeRotationOrMatrixKind {
  PdfNativeRotationOrMatrixKind_Rotation,
  PdfNativeRotationOrMatrixKind_Matrix,
} PdfNativeRotationOrMatrixKind;

typedef enum PdfNativeShowFoot {
  PdfNativeShowFoot_EveryPage,
  PdfNativeShowFoot_LastPage,
  PdfNativeShowFoot_Never,
} PdfNativeShowFoot;

typedef enum PdfNativeShowHead {
  PdfNativeShowHead_EveryPage,
  PdfNativeShowHead_FirstPage,
  PdfNativeShowHead_Never,
} PdfNativeShowHead;

typedef enum PdfNativeStandardPaperSize {
  /**
   * ANSI Standard Paper A size (US Letter), 216 x 279 mm / 8.5 x 11.0 in
   */
  PdfNativeStandardPaperSize_USLetterAnsiA,
  /**
   * US Half Letter size, 140 x 216 mm / 5.5 x 8.5 in
   */
  PdfNativeStandardPaperSize_USHalfLetter,
  /**
   * US Government Letter size, 203 x 254 mm / 8.0 x 10.0 in
   */
  PdfNativeStandardPaperSize_USGovernmentLetter,
  /**
   * US Legal size, 216 x 356 mm / 8.5 x 14.0 in
   */
  PdfNativeStandardPaperSize_USLegal,
  /**
   * US Junior Legal size, 127 x 203 mm / 5.0 x 8.0 in
   */
  PdfNativeStandardPaperSize_USJuniorLegal,
  /**
   * US Government Legal size, 216 x 330 mm / 8.5 x 13.0 in
   */
  PdfNativeStandardPaperSize_USGovernmentLegal,
  /**
   * ANSI Standard Paper B size (US Ledger / Tabloid), 279 x 432 mm / 11.0 x 17.0 in
   */
  PdfNativeStandardPaperSize_USLedgerTabloidAnsiB,
  /**
   * ISO 216 4A0, quadruple the size of ISO 216 standard A0, 1682 x 2378 mm
   */
  PdfNativeStandardPaperSize_A0x4,
  /**
   * ISO 216 2A0, double the size of ISO 216 standard A0, 1189 x 1682 mm
   */
  PdfNativeStandardPaperSize_A0x2,
  /**
   * ISO 216 A0, 841 x 1189 mm
   */
  PdfNativeStandardPaperSize_A0,
  /**
   * ISO 216 A1, 594 x 841 mm
   */
  PdfNativeStandardPaperSize_A1,
  /**
   * ISO 216 A2, 420 x 594 mm
   */
  PdfNativeStandardPaperSize_A2,
  /**
   * ISO 216 A3, 297 x 420 mm
   */
  PdfNativeStandardPaperSize_A3,
  /**
   * ISO 216 A4, 210 x 297 mm
   */
  PdfNativeStandardPaperSize_A4,
  /**
   * ISO 216 A4R, equivalent to A4 rotated 90 degrees, 297 x 210 mm
   */
  PdfNativeStandardPaperSize_A4R,
  /**
   * ISO 216 A5, 148 x 210 mm
   */
  PdfNativeStandardPaperSize_A5,
  /**
   * ISO 216 A6, 105 x 148 mm
   */
  PdfNativeStandardPaperSize_A6,
  /**
   * ISO 216 A7, 74 x 105 mm
   */
  PdfNativeStandardPaperSize_A7,
  /**
   * ISO 216 A8, 52 x 74 mm
   */
  PdfNativeStandardPaperSize_A8,
  /**
   * ISO 216 A9, 37 x 52 mm
   */
  PdfNativeStandardPaperSize_A9,
  /**
   * ISO 216 A10, 26 x 37 mm
   */
  PdfNativeStandardPaperSize_A10,
  /**
   * ISO 216 B0, 1000 x 1414 mm
   */
  PdfNativeStandardPaperSize_B0,
  /**
   * ISO 216 B1, 707 x 1000 mm
   */
  PdfNativeStandardPaperSize_B1,
  /**
   * ISO 216 B2, 500 x 707 mm
   */
  PdfNativeStandardPaperSize_B2,
  /**
   * ISO 216 B3, 353 x 500 mm
   */
  PdfNativeStandardPaperSize_B3,
  /**
   * ISO 216 B4, 250 x 353 mm
   */
  PdfNativeStandardPaperSize_B4,
  /**
   * ISO 216 B5, 176 x 250 mm
   */
  PdfNativeStandardPaperSize_B5,
  /**
   * ISO 216 B6, 125 x 176 mm
   */
  PdfNativeStandardPaperSize_B6,
  /**
   * ISO 216 B7, 88 x 125 mm
   */
  PdfNativeStandardPaperSize_B7,
  /**
   * ISO 216 B8, 62 x 88 mm
   */
  PdfNativeStandardPaperSize_B8,
  /**
   * ISO 216 B9, 44 x 62 mm
   */
  PdfNativeStandardPaperSize_B9,
  /**
   * ISO 216 B10, 31 x 44 mm
   */
  PdfNativeStandardPaperSize_B10,
  /**
   * ISO 216 C0, 917 x 1297 mm
   */
  PdfNativeStandardPaperSize_C0,
  /**
   * ISO 216 C1, 648 x 917 mm
   */
  PdfNativeStandardPaperSize_C1,
  /**
   * ISO 216 C2, 458 x 648 mm
   */
  PdfNativeStandardPaperSize_C2,
  /**
   * ISO 216 C3, 324 x 458 mm
   */
  PdfNativeStandardPaperSize_C3,
  /**
   * ISO 216 C4, 229 x 324 mm
   */
  PdfNativeStandardPaperSize_C4,
  /**
   * ISO 216 C5, 162 x 229 mm
   */
  PdfNativeStandardPaperSize_C5,
  /**
   * ISO 216 C6, 114 x 162 mm
   */
  PdfNativeStandardPaperSize_C6,
  /**
   * ISO 216 C7, 81 x 114 mm
   */
  PdfNativeStandardPaperSize_C7,
  /**
   * ISO 216 C8, 57 x 81 mm
   */
  PdfNativeStandardPaperSize_C8,
  /**
   * ISO 216 C9, 40 x 57 mm
   */
  PdfNativeStandardPaperSize_C9,
  /**
   * ISO 216 C10, 28 x 40 mm
   */
  PdfNativeStandardPaperSize_C10,
  /**
   * ANSI Standard Paper B+ (Super B) size, equivalent to ANSI B with a 1 inch margin,
   * 330 x 483 mm / 13.0 x 19.0 in
   */
  PdfNativeStandardPaperSize_AnsiBPlus,
  /**
   * ANSI Standard Paper C size, 432 x 559 mm / 17.0 x 22.0 in
   */
  PdfNativeStandardPaperSize_AnsiC,
  /**
   * ANSI Standard Paper D size, 559 x 864 mm / 22.0 x 34.0 in
   */
  PdfNativeStandardPaperSize_AnsiD,
  /**
   * ANSI Standard Paper E size, 864 x 1118 mm / 34.0 x 44.0 in
   */
  PdfNativeStandardPaperSize_AnsiE,
  /**
   * North American architectural A size, 229 x 305 mm / 9.0 x 12.0 in
   */
  PdfNativeStandardPaperSize_ArchA,
  /**
   * North American architectural B size, 305 x 457 mm / 12.0 x 18.0 in
   */
  PdfNativeStandardPaperSize_ArchB,
  /**
   * North American architectural C size, 457 x 610 mm / 18.0 x 24.0 in
   */
  PdfNativeStandardPaperSize_ArchC,
  /**
   * North American architectural D size, 610 x 914 mm / 24.0 x 36.0 in
   */
  PdfNativeStandardPaperSize_ArchD,
  /**
   * North American architectural E size, 762 x 1067 mm / 30.0 x 42.0 in
   */
  PdfNativeStandardPaperSize_ArchE,
} PdfNativeStandardPaperSize;

typedef enum PdfNativeStyle {
  PdfNativeStyle_S,
  PdfNativeStyle_F,
  PdfNativeStyle_DF,
  PdfNativeStyle_FD,
} PdfNativeStyle;

typedef enum PdfNativeTableTheme {
  PdfNativeTableTheme_Striped,
  PdfNativeTableTheme_Grid,
  PdfNativeTableTheme_Plain,
} PdfNativeTableTheme;

typedef enum PdfNativeTextAlignment {
  PdfNativeTextAlignment_Left,
  PdfNativeTextAlignment_Center,
  PdfNativeTextAlignment_Right,
  PdfNativeTextAlignment_Justify,
} PdfNativeTextAlignment;

typedef enum PdfNativeTextBaseline {
  PdfNativeTextBaseline_Alphabetic,
  PdfNativeTextBaseline_Ideographic,
  PdfNativeTextBaseline_Bottom,
  PdfNativeTextBaseline_Top,
  PdfNativeTextBaseline_Middle,
  PdfNativeTextBaseline_Hanging,
} PdfNativeTextBaseline;

typedef enum PdfNativeUnit {
  PdfNativeUnit_Mm,
  PdfNativeUnit_Points,
  PdfNativeUnit_Cm,
  PdfNativeUnit_Inches,
} PdfNativeUnit;

typedef enum PdfNativePaperSize_Tag {
  PdfNativePaperSize_StandardPaper,
  PdfNativePaperSize_Custom,
} PdfNativePaperSize_Tag;

typedef struct PdfNativePaperSize_Custom_Body {
  float _0;
  float _1;
} PdfNativePaperSize_Custom_Body;

typedef struct PdfNativePaperSize {
  PdfNativePaperSize_Tag tag;
  union {
    struct {
      enum PdfNativeStandardPaperSize standard_paper;
    };
    PdfNativePaperSize_Custom_Body custom;
  };
} PdfNativePaperSize;

typedef struct PdfNativeDocumentConfig {
  enum PdfNativeOrientation orientation;
  struct PdfNativePaperSize size;
  enum PdfNativeUnit units;
  float device_scale;
} PdfNativeDocumentConfig;

typedef struct CColumnDef {
  const char *header;
  const char *data_key;
} CColumnDef;

typedef struct CColumnKey {
  enum CColumnKeyType type_;
  uintptr_t index;
  const char *data_key;
} CColumnKey;

typedef struct CPdfNativeColor {
  int32_t r;
  int32_t g;
  int32_t b;
  int32_t a;
} CPdfNativeColor;

typedef union CPdfNativeColorOptionalData {
  struct CPdfNativeColor value;
} CPdfNativeColorOptionalData;

typedef struct CPdfNativeColorOptional {
  enum CPdfNativeColorOptionalType kind;
  union CPdfNativeColorOptionalData data;
} CPdfNativeColorOptional;

typedef struct CPdfNativePoints {
  float value;
  enum PdfNativeUnit unit;
} CPdfNativePoints;

typedef struct CCellWidth {
  enum CCellWidthType type_;
  struct CPdfNativePoints value;
} CCellWidth;

typedef union CPdfNativePointsOptionalData {
  struct CPdfNativePoints value;
} CPdfNativePointsOptionalData;

typedef struct CPdfNativePointsOptional {
  enum CPdfNativePointsOptionalType kind;
  union CPdfNativePointsOptionalData data;
} CPdfNativePointsOptional;

typedef struct CPdfNativePadding {
  struct CPdfNativePoints top;
  struct CPdfNativePoints right;
  struct CPdfNativePoints bottom;
  struct CPdfNativePoints left;
} CPdfNativePadding;

typedef struct CStyleDef {
  enum PdfNativeFontFamily font;
  enum PdfNativeFontStyle font_style;
  enum PdfNativeOverflow overflow;
  struct CPdfNativeColorOptional fill_color;
  struct CPdfNativeColorOptional text_color;
  struct CCellWidth cell_width;
  struct CPdfNativePointsOptional min_cell_width;
  struct CPdfNativePoints min_cell_height;
  enum CHorizontalAlign horizontal_align;
  enum CVerticalAlign vertical_align;
  float font_size;
  struct CPdfNativePadding cell_padding;
  struct CPdfNativeColor line_color;
  float line_width;
} CStyleDef;

typedef struct CTableCell {
  const char *content;
  uintptr_t row_span;
  uintptr_t col_span;
  const struct CStyleDef *style;
} CTableCell;

typedef struct CTableCellOrString {
  const char *string;
  const struct CTableCell *cell;
} CTableCellOrString;

typedef struct CPdfTable {
  const struct CColumnDef *columns;
  uintptr_t columns_size;
  const struct CColumnKey *column_styles_keys;
  uintptr_t column_styles_keys_size;
  const struct CStyleDef *column_styles_values;
  uintptr_t column_styles_values_size;
  const struct CStyleDef *head_styles;
  const struct CStyleDef *body_styles;
  const struct CStyleDef *foot_styles;
  const struct CTableCellOrString *const *head;
  uintptr_t head_size;
  const uintptr_t *header_inner_sizes;
  uintptr_t header_inner_size;
  const struct CTableCellOrString *const *body;
  uintptr_t body_size;
  const uintptr_t *body_inner_sizes;
  uintptr_t body_inner_size;
  const struct CTableCellOrString *const *foot;
  uintptr_t foot_size;
  const uintptr_t *foot_inner_sizes;
  uintptr_t foot_inner_size;
  struct CPdfNativePoints position_x;
  struct CPdfNativePoints position_y;
  enum PdfNativeTableTheme theme;
  enum PdfNativePageBreak page_break;
  enum PdfNativeShowHead show_head;
  enum PdfNativeShowFoot show_foot;
} CPdfTable;

typedef union PdfNativeRotationOrMatrixData {
  float rotation;
  float matrix[6];
} PdfNativeRotationOrMatrixData;

typedef struct PdfNativeRotationOrMatrix {
  enum PdfNativeRotationOrMatrixKind kind;
  union PdfNativeRotationOrMatrixData data;
} PdfNativeRotationOrMatrix;

typedef struct PdfNativeTextOptions {
  enum PdfNativeTextAlignment align;
  enum PdfNativeTextBaseline baseline;
  struct PdfNativeRotationOrMatrix angle;
  enum PdfNativeRotationDirection rotation_direction;
  uint32_t char_space;
  float horizontal_scale;
  float line_height_factor;
  uint32_t max_width;
} PdfNativeTextOptions;
